1Ô∏è‚É£ Esquema Conceitual ‚Äì Oficina Mec√¢nica
Entidades e Atributos

Cliente

id_cliente (PK)

nome

endereco

telefone

email

Veiculo

id_veiculo (PK)

id_cliente (FK)

placa

marca

modelo

ano

Equipe

id_equipe (PK)

nome_equipe

Mecanico

id_mecanico (PK)

id_equipe (FK)

nome

endereco

especialidade

OS (Ordem de Servi√ßo)

id_os (PK)

id_veiculo (FK)

id_equipe (FK)

data_emissao

data_conclusao

valor_total

status (ex: ‚ÄúAberta‚Äù, ‚ÄúEm Execu√ß√£o‚Äù, ‚ÄúConclu√≠da‚Äù)

autorizacao_cliente (boolean)

Servico

id_servico (PK)

descricao

valor_mao_obra (consultado em tabela de refer√™ncia)

Peca

id_peca (PK)

descricao

valor_unitario

OS_Servico (tabela associativa entre OS e Servi√ßos)

id_os (FK)

id_servico (FK)

quantidade

valor_total_servico (quantidade * valor_mao_obra)

OS_Peca (tabela associativa entre OS e Pe√ßas)

id_os (FK)

id_peca (FK)

quantidade

valor_total_peca (quantidade * valor_unitario)

2Ô∏è‚É£ Modelo ER ‚Äì rela√ß√µes

Um Cliente possui N ve√≠culos

Um Ve√≠culo pode ter N ordens de servi√ßo (OS)

Uma OS √© atribu√≠da a 1 equipe

Uma Equipe √© composta por N mec√¢nicos

Uma OS pode conter N servi√ßos (via OS_Servico)

Uma OS pode conter N pe√ßas (via OS_Peca)

Servi√ßo consulta valor em tabela de refer√™ncia

Pe√ßa possui valor unit√°rio

3Ô∏è‚É£ Script SQL 

CREATE TABLE Cliente (
  id_cliente INT AUTO_INCREMENT PRIMARY KEY,
  nome VARCHAR(255) NOT NULL,
  endereco VARCHAR(255),
  telefone VARCHAR(50),
  email VARCHAR(255)
);

CREATE TABLE Veiculo (
  id_veiculo INT AUTO_INCREMENT PRIMARY KEY,
  id_cliente INT NOT NULL,
  placa VARCHAR(10) NOT NULL UNIQUE,
  marca VARCHAR(100),
  modelo VARCHAR(100),
  ano INT,
  FOREIGN KEY (id_cliente) REFERENCES Cliente(id_cliente)
);

CREATE TABLE Equipe (
  id_equipe INT AUTO_INCREMENT PRIMARY KEY,
  nome_equipe VARCHAR(100)
);

CREATE TABLE Mecanico (
  id_mecanico INT AUTO_INCREMENT PRIMARY KEY,
  id_equipe INT,
  nome VARCHAR(255) NOT NULL,
  endereco VARCHAR(255),
  especialidade VARCHAR(100),
  FOREIGN KEY (id_equipe) REFERENCES Equipe(id_equipe)
);

CREATE TABLE OS (
  id_os INT AUTO_INCREMENT PRIMARY KEY,
  id_veiculo INT NOT NULL,
  id_equipe INT NOT NULL,
  data_emissao DATE NOT NULL,
  data_conclusao DATE,
  valor_total DECIMAL(10,2),
  status ENUM('Aberta','Em Execu√ß√£o','Conclu√≠da','Cancelada') DEFAULT 'Aberta',
  autorizacao_cliente BOOLEAN DEFAULT FALSE,
  FOREIGN KEY (id_veiculo) REFERENCES Veiculo(id_veiculo),
  FOREIGN KEY (id_equipe) REFERENCES Equipe(id_equipe)
);

CREATE TABLE Servico (
  id_servico INT AUTO_INCREMENT PRIMARY KEY,
  descricao VARCHAR(255) NOT NULL,
  valor_mao_obra DECIMAL(10,2) NOT NULL
);

CREATE TABLE Peca (
  id_peca INT AUTO_INCREMENT PRIMARY KEY,
  descricao VARCHAR(255) NOT NULL,
  valor_unitario DECIMAL(10,2) NOT NULL
);

CREATE TABLE OS_Servico (
  id_os INT,
  id_servico INT,
  quantidade INT DEFAULT 1,
  valor_total_servico DECIMAL(10,2),
  PRIMARY KEY (id_os,id_servico),
  FOREIGN KEY (id_os) REFERENCES OS(id_os),
  FOREIGN KEY (id_servico) REFERENCES Servico(id_servico)
);

CREATE TABLE OS_Peca (
  id_os INT,
  id_peca INT,
  quantidade INT DEFAULT 1,
  valor_total_peca DECIMAL(10,2),
  PRIMARY KEY (id_os,id_peca),
  FOREIGN KEY (id_os) REFERENCES OS(id_os),
  FOREIGN KEY (id_peca) REFERENCES Peca(id_peca)
);

4Ô∏è‚É£ Estrutura no GitHub
/oficina-mecanica
‚îÇ
‚îú‚îÄ‚îÄ esquema.sql       # Script SQL completo
‚îú‚îÄ‚îÄ modelo-er.png     # (opcional) diagrama ER
‚îî‚îÄ‚îÄ README.md

5Ô∏è‚É£ README.md sugerido
# Sistema de Controle de Ordens de Servi√ßo ‚Äì Oficina Mec√¢nica

Este reposit√≥rio cont√©m um modelo conceitual e l√≥gico de banco de dados para um sistema de **controle e gerenciamento de execu√ß√£o de ordens de servi√ßo** em uma oficina mec√¢nica.

## üìå Contexto
Clientes levam ve√≠culos √† oficina mec√¢nica para reparos ou revis√µes. Cada ve√≠culo √© designado a uma equipe de mec√¢nicos que identifica os servi√ßos e preenche uma OS (ordem de servi√ßo) com data de entrega. O valor de cada servi√ßo √© calculado consultando uma tabela de refer√™ncia de m√£o de obra. O valor das pe√ßas tamb√©m comp√µe a OS. O cliente autoriza a execu√ß√£o dos servi√ßos. A mesma equipe avalia e executa os servi√ßos.

## üóÇÔ∏è Estrutura do Projeto
- `esquema.sql` ‚Äì Script SQL com cria√ß√£o das tabelas
- `modelo-er.png` ‚Äì Diagrama ER ilustrando entidades e relacionamentos (opcional)
- `README.md` ‚Äì Documenta√ß√£o do projeto

## üìù Modelo Conceitual
**Entidades principais:**
- Cliente
- Ve√≠culo
- Equipe
- Mec√¢nico
- OS (Ordem de Servi√ßo)
- Servi√ßo
- Pe√ßa
- OS_Servi√ßo (tabela associativa)
- OS_Pe√ßa (tabela associativa)

## üöÄ Como usar
1. Clone este reposit√≥rio:
   ```bash
   git clone https://github.com/seuusuario/oficina-mecanica.git


Execute o script esquema.sql no seu banco de dados (MySQL/MariaDB/PostgreSQL).

üìù Observa√ß√µes

Algumas escolhas (como atributos de endere√ßo, tipos de status, etc.) foram assumidas por n√£o estarem na narrativa original. Elas podem ser ajustadas conforme as regras do neg√≥cio.

üë§ Autor

Desenvolvido por Filipe Pimentel
.


---

Quer que eu tamb√©m gere **o diagrama ER em imagem (PNG)** para voc√™ j√° colocar no reposit√≥rio? (Posso gerar ago
